!function(){"use strict";var e=React.createClass({propTypes:{value:React.PropTypes.object.isRequired,onChange:React.PropTypes.func.isRequired},render:function(){return React.DOM.form({className:"form-inline"},React.DOM.div({className:"row"},React.DOM.div({className:"small-5 medium-3 large-2 column"},React.DOM.label(null,"Start Date",React.createElement(DatePicker,{selected:this.props.value.startDate,onChange:this.handleDateOnChange,dateFormat:"YYYY-MM-DD",popoverAttachment:"bottom left",popoverTargetAttachment:"top left",popoverTargetOffset:"10px 0px"}))),React.DOM.div({className:"small-3 medium-2 large-1 column"},React.DOM.label(null,"Cycles",React.DOM.input({className:"form-control",type:"number",name:"cycles",value:this.props.value.cycles,onChange:this.handleInputFieldOnChange}))),React.DOM.div({className:"small-4 medium-3 large-2 column end"},React.DOM.label(null,"Days per cycle",React.DOM.input({className:"form-control",type:"number",name:"days",value:this.props.value.days,onChange:this.handleInputFieldOnChange})))))},handleDateOnChange:function(e){this.props.value.startDate=e,this.props.onChange(this.props.value)},handleInputFieldOnChange:function(e){this.props.value.hasOwnProperty(e.target.name)&&(this.props.value[e.target.name]=e.target.value,this.props.onChange(this.props.value))},handleCyclesOnChange:function(e){this.props.value.cycles=e.target.value,this.props.onChange(this.props.value)},handleDaysOnChange:function(e){this.props.value.days=e.target.value,this.props.onChange(this.props.value)}}),t=React.createClass({propTypes:{label:React.PropTypes.string,date:React.PropTypes.string,datePretty:React.PropTypes.string},render:function(){return React.DOM.tr(null,React.DOM.td(null,this.props.label),React.DOM.td(null,this.props.date),React.DOM.td(null,this.props.datePretty))}}),a=React.createClass({propTypes:{value:React.PropTypes.object.isRequired},render:function(){return React.DOM.table(null,React.DOM.thead(null,React.DOM.tr(null,React.DOM.th({width:90},"Cycle"),React.DOM.th({width:110},"Date"),React.DOM.th())),React.DOM.tbody(null,this.getTableRowComponents(this.parseValue(this.props.value))))},getTableRowComponents:function(e){return e.map(function(e,a){return React.createElement(t,{key:a,label:e.label,date:e.date,datePretty:e.datePretty})})},daysToMilliseconds:function(e){return 864e5*e},parseValue:function(e){var t,a=[],n=parseInt(e.days),s=parseInt(e.cycles);if(isNaN(n)||isNaN(s)||1>n||1>s)return a;for(var r=0;s>r;r++)t=0===r?new Date(e.startDate):new Date(t.getTime()+this.daysToMilliseconds(n)),a.push({id:Date.now()+r,label:(r+1).toString(),date:moment(t.getTime()).format("YYYY-MM-DD"),datePretty:moment(t.getTime()).format("dddd, MMMM D, YYYY")});return t=new Date(t.getTime()+this.daysToMilliseconds(n-1)),a.push({id:Date.now()+s,label:"Last day",date:moment(t.getTime()).format("YYYY-MM-DD"),datePretty:moment(t.getTime()).format("dddd, MMMM D, YYYY")}),a}}),n=React.createClass({propTypes:function(){React.PropTypes.object.isRequired},getInitialState:function(){var e=this.props.urijs.search(!0);return{startDate:moment(e["start-date"]),cycles:parseInt(e.cycles)||1,days:parseInt(e.days)||32}},render:function(){return React.DOM.div({className:"row"},React.DOM.h1(null,"Date Cycle Calculator"),React.createElement(e,{value:this.state,onChange:this.handleFormOnChange}),React.createElement(a,{value:this.state}))},handleFormOnChange:function(e){this.setState(e);var t={};t["start-date"]=e.startDate.format("YYYY-MM-DD"),t.cycles=e.cycles,t.days=e.days,window.history.replaceState({},"",this.props.urijs.search(t).toString())}});ReactDOM.render(React.createElement(n,{urijs:new URI}),document.getElementById("application"))}();